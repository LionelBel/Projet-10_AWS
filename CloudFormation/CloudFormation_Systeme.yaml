
### CloudFormation automatiser l'installation de notre infrastructure sur AWS ###

### Nos services sont dans la Zone de disponibilité AWS Europe(Paris):eu-west-3 ###

#################################
### Infrastructure du système ###
#################################

## Création de l'infrastrucutre
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation infrastrucutre Template

## Création solution Amazon S3
Resources:
  projet10:
    Type: AWS::S3::Bucket
    Description: Bucket S3 AWS
    Properties:
      BucketName: s3-projet-10

        ########################################

## Création de la base de données MariaDB
  WordpressDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: BD-Wordpress
      Engine: mariadb
      DBName: wordpres
      MasterUsername: wordpress
      MasterUserPassword: wordpress
      MultiAZ: "true"
    DeletionPolicy: Snapshot

#######################################################################################
### Création des instatances Wordpress avec Docker et du LoadBalancer
## Création du SecurityGroup du LoadBalancer
  WordpressEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permission HTTP HTTPS et SSH en entree et sortie
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref Projet10VPC

        ########################################

## Création de la Launch Configuration des instances Wordpress
  WordpressLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: ami-031eb8d942193d84f
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref WordpressEC2SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo amazon-linux-extras install docker
          sudo systemctl enable docker
          sudo systemctl start docker.service
          docker pull lionelbel/wordpress-custom
          docker run --name=wordpress -d -p 80:80 lionelbel/wordpress-custom:latest
          docker exec wordpress -it /var/www/install-site-wp.sh

        ########################################

## Création de L'auto Scaling Group
  WordpressAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref WordpressLaunchConfig
      AvailabilityZones:
        - eu-west-3a
        - eu-west-3b
      VPCZoneIdentifier: 
        - !Ref PublicSubnetA 
        - !Ref PublicSubnetB
      DesiredCapacity: 2
      MaxSize: 2
      MinSize: 2
      TargetGroupARNs: 
        - !Ref WordpressTargetGroup

        ########################################

## Création du groupe cible (TargetGroup)
  WordpressTargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Port: 80
      Protocol: HTTP
      VpcId: !Ref Projet10VPC

        ########################################

## Création du security Group du LoadBalancer
  WordpressLBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permission HTTP HTTPS
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref Projet10VPC

        ########################################

## Création du LoadBalancer 
  WordpressLoadBalancer: 
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !Ref WordpressLBSecurityGroup
      Subnets:  
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB

        ########################################

## Configuration des port d'écoute du LoadBalancer
  WordpressLoadBlancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      LoadBalancerArn: !Ref WordpressLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WordpressTargetGroup
